/*! tailwindcss v4.1.3 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
    }
  }
}

@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-white: #fff;
    --spacing: .25rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-base: 1rem;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --tracking-widest: .1em;
    --radius-md: calc(var(--radius)  - 2px);
    --radius-lg: var(--radius);
    --shadow-lg: 0 10px 15px -3px #0000001a, 0 4px 6px -4px #0000001a;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(--font-sans--font-variation-settings);
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
    --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
  }
}

@layer base {
  *, :after, :before, ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  body {
    line-height: inherit;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
    color: currentColor;
  }

  @supports (color: color-mix(in lab, red, red)) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }

  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }

  ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button {
    height: auto;
  }

  ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  * {
    border-color: var(--border);
    outline-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    * {
      outline-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h1 {
    font-size: var(--text-2xl);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h2 {
    font-size: var(--text-xl);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h3 {
    font-size: var(--text-lg);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) h4 {
    font-size: var(--text-base);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) p {
    font-size: var(--text-base);
    font-weight: var(--font-weight-normal);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) label, :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) button {
    font-size: var(--text-base);
    font-weight: var(--font-weight-medium);
    line-height: 1.5;
  }

  :where(:not(:has([class*=" text-"]), :not(:has([class^="text-"])))) input {
    font-size: var(--text-base);
    font-weight: var(--font-weight-normal);
    line-height: 1.5;
  }

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
}

@layer utilities {
  .\@container\/card-header {
    container: card-header / inline-size;
  }

  .pointer-events-none {
    pointer-events: none;
  }

  .visible {
    visibility: visible;
  }

  .absolute {
    position: absolute;
  }

  .relative {
    position: relative;
  }

  .sticky {
    position: sticky;
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-full {
    top: 100%;
  }

  .left-0 {
    left: calc(var(--spacing) * 0);
  }

  .left-2 {
    left: calc(var(--spacing) * 2);
  }

  .z-50 {
    z-index: 50;
  }

  .col-start-2 {
    grid-column-start: 2;
  }

  .row-span-2 {
    grid-row: span 2 / span 2;
  }

  .row-start-1 {
    grid-row-start: 1;
  }

  .container {
    width: 100%;
  }

  @media (width >= 40rem) {
    .container {
      max-width: 40rem;
    }
  }

  @media (width >= 48rem) {
    .container {
      max-width: 48rem;
    }
  }

  @media (width >= 64rem) {
    .container {
      max-width: 64rem;
    }
  }

  @media (width >= 80rem) {
    .container {
      max-width: 80rem;
    }
  }

  @media (width >= 96rem) {
    .container {
      max-width: 96rem;
    }
  }

  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }

  .mx-auto {
    margin-inline: auto;
  }

  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }

  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }

  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }

  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }

  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }

  .mr-8 {
    margin-right: calc(var(--spacing) * 8);
  }

  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }

  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }

  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }

  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }

  .ml-auto {
    margin-left: auto;
  }

  .block {
    display: block;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .inline-flex {
    display: inline-flex;
  }

  .size-2 {
    width: calc(var(--spacing) * 2);
    height: calc(var(--spacing) * 2);
  }

  .size-2\.5 {
    width: calc(var(--spacing) * 2.5);
    height: calc(var(--spacing) * 2.5);
  }

  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }

  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .size-9 {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
  }

  .h-2 {
    height: calc(var(--spacing) * 2);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-5 {
    height: calc(var(--spacing) * 5);
  }

  .h-6 {
    height: calc(var(--spacing) * 6);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-9 {
    height: calc(var(--spacing) * 9);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-12 {
    height: calc(var(--spacing) * 12);
  }

  .h-16 {
    height: calc(var(--spacing) * 16);
  }

  .h-auto {
    height: auto;
  }

  .h-px {
    height: 1px;
  }

  .max-h-\(--radix-dropdown-menu-content-available-height\) {
    max-height: var(--radix-dropdown-menu-content-available-height);
  }

  .max-h-96 {
    max-height: calc(var(--spacing) * 96);
  }

  .max-h-\[70vh\] {
    max-height: 70vh;
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-2 {
    width: calc(var(--spacing) * 2);
  }

  .w-4 {
    width: calc(var(--spacing) * 4);
  }

  .w-5 {
    width: calc(var(--spacing) * 5);
  }

  .w-6 {
    width: calc(var(--spacing) * 6);
  }

  .w-8 {
    width: calc(var(--spacing) * 8);
  }

  .w-10 {
    width: calc(var(--spacing) * 10);
  }

  .w-12 {
    width: calc(var(--spacing) * 12);
  }

  .w-16 {
    width: calc(var(--spacing) * 16);
  }

  .w-48 {
    width: calc(var(--spacing) * 48);
  }

  .w-56 {
    width: calc(var(--spacing) * 56);
  }

  .w-64 {
    width: calc(var(--spacing) * 64);
  }

  .w-fit {
    width: fit-content;
  }

  .w-full {
    width: 100%;
  }

  .max-w-2xl {
    max-width: var(--container-2xl);
  }

  .max-w-3xl {
    max-width: var(--container-3xl);
  }

  .max-w-4xl {
    max-width: var(--container-4xl);
  }

  .min-w-\[8rem\] {
    min-width: 8rem;
  }

  .flex-1 {
    flex: 1;
  }

  .shrink-0 {
    flex-shrink: 0;
  }

  .origin-\(--radix-dropdown-menu-content-transform-origin\) {
    transform-origin: var(--radix-dropdown-menu-content-transform-origin);
  }

  .origin-\(--radix-tooltip-content-transform-origin\) {
    transform-origin: var(--radix-tooltip-content-transform-origin);
  }

  .translate-y-\[calc\(-50\%_-_2px\)\] {
    --tw-translate-y: calc(-50% - 2px);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .rotate-45 {
    rotate: 45deg;
  }

  .animate-in {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .cursor-default {
    cursor: default;
  }

  .cursor-pointer {
    cursor: pointer;
  }

  .auto-rows-min {
    grid-auto-rows: min-content;
  }

  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .grid-rows-\[auto_auto\] {
    grid-template-rows: auto auto;
  }

  .flex-col {
    flex-direction: column;
  }

  .items-center {
    align-items: center;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-start {
    justify-content: flex-start;
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }

  :where(.space-y-1 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-y-20 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(calc(var(--spacing) * 20) * var(--tw-space-y-reverse));
    margin-block-end: calc(calc(var(--spacing) * 20) * calc(1 - var(--tw-space-y-reverse)));
  }

  :where(.space-x-1 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 2) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-3 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-4 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 4) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.space-x-6 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 6) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse)));
  }

  .self-start {
    align-self: flex-start;
  }

  .justify-self-end {
    justify-self: flex-end;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-x-hidden {
    overflow-x: hidden;
  }

  .overflow-y-auto {
    overflow-y: auto;
  }

  .rounded-\[2px\] {
    border-radius: 2px;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-md {
    border-radius: calc(var(--radius)  - 2px);
  }

  .rounded-sm {
    border-radius: calc(var(--radius)  - 4px);
  }

  .rounded-xl {
    border-radius: calc(var(--radius)  + 4px);
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-border {
    border-color: var(--border);
  }

  .bg-accent {
    background-color: var(--accent);
  }

  .bg-accent\/20 {
    background-color: var(--accent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-accent\/20 {
      background-color: color-mix(in oklab, var(--accent) 20%, transparent);
    }
  }

  .bg-background {
    background-color: var(--background);
  }

  .bg-border {
    background-color: var(--border);
  }

  .bg-card {
    background-color: var(--card);
  }

  .bg-destructive {
    background-color: var(--destructive);
  }

  .bg-popover {
    background-color: var(--popover);
  }

  .bg-primary {
    background-color: var(--primary);
  }

  .bg-primary\/20 {
    background-color: var(--primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-primary\/20 {
      background-color: color-mix(in oklab, var(--primary) 20%, transparent);
    }
  }

  .bg-secondary {
    background-color: var(--secondary);
  }

  .bg-secondary\/20 {
    background-color: var(--secondary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-secondary\/20 {
      background-color: color-mix(in oklab, var(--secondary) 20%, transparent);
    }
  }

  .bg-white {
    background-color: var(--color-white);
  }

  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }

  .from-background {
    --tw-gradient-from: var(--background);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .from-primary {
    --tw-gradient-from: var(--primary);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .via-secondary {
    --tw-gradient-via: var(--secondary);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }

  .to-accent {
    --tw-gradient-to: var(--accent);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .to-card {
    --tw-gradient-to: var(--card);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }

  .bg-clip-text {
    background-clip: text;
  }

  .fill-current {
    fill: currentColor;
  }

  .fill-primary {
    fill: var(--primary);
  }

  .p-0 {
    padding: calc(var(--spacing) * 0);
  }

  .p-1 {
    padding: calc(var(--spacing) * 1);
  }

  .p-3 {
    padding: calc(var(--spacing) * 3);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }

  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }

  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }

  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }

  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }

  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .pl-8 {
    padding-left: calc(var(--spacing) * 8);
  }

  .text-center {
    text-align: center;
  }

  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .tracking-widest {
    --tw-tracking: var(--tracking-widest);
    letter-spacing: var(--tracking-widest);
  }

  .text-balance {
    text-wrap: balance;
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .text-accent {
    color: var(--accent);
  }

  .text-card-foreground {
    color: var(--card-foreground);
  }

  .text-foreground {
    color: var(--foreground);
  }

  .text-muted-foreground {
    color: var(--muted-foreground);
  }

  .text-popover-foreground {
    color: var(--popover-foreground);
  }

  .text-primary {
    color: var(--primary);
  }

  .text-primary-foreground {
    color: var(--primary-foreground);
  }

  .text-secondary {
    color: var(--secondary);
  }

  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }

  .text-transparent {
    color: #0000;
  }

  .text-white {
    color: var(--color-white);
  }

  .underline-offset-4 {
    text-underline-offset: 4px;
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-offset-background {
    --tw-ring-offset-color: var(--background);
  }

  .outline-hidden {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .outline-hidden {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }

  .fade-in-0 {
    --tw-enter-opacity: 0;
  }

  .zoom-in-95 {
    --tw-enter-scale: .95;
  }

  @media (hover: hover) {
    .hover\:bg-accent:hover {
      background-color: var(--accent);
    }
  }

  @media (hover: hover) {
    .hover\:bg-destructive\/90:hover {
      background-color: var(--destructive);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-destructive\/90:hover {
        background-color: color-mix(in oklab, var(--destructive) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-muted:hover {
      background-color: var(--muted);
    }
  }

  @media (hover: hover) {
    .hover\:bg-primary\/90:hover {
      background-color: var(--primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-primary\/90:hover {
        background-color: color-mix(in oklab, var(--primary) 90%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-secondary\/80:hover {
      background-color: var(--secondary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-secondary\/80:hover {
        background-color: color-mix(in oklab, var(--secondary) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:text-accent-foreground:hover {
      color: var(--accent-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-primary:hover {
      color: var(--primary);
    }
  }

  @media (hover: hover) {
    .hover\:underline:hover {
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .hover\:opacity-80:hover {
      opacity: .8;
    }
  }

  @media (hover: hover) {
    .hover\:shadow-lg:hover {
      --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  .focus\:bg-accent:focus {
    background-color: var(--accent);
  }

  .focus\:text-accent-foreground:focus {
    color: var(--accent-foreground);
  }

  .focus-visible\:border-ring:focus-visible {
    border-color: var(--ring);
  }

  .focus-visible\:ring-2:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-\[3px\]:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:ring-destructive\/20:focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-destructive\/20:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .focus-visible\:ring-ring:focus-visible {
    --tw-ring-color: var(--ring);
  }

  .focus-visible\:ring-ring\/50:focus-visible {
    --tw-ring-color: var(--ring);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-ring\/50:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--ring) 50%, transparent);
    }
  }

  .focus-visible\:ring-offset-2:focus-visible {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .focus-visible\:outline-none:focus-visible {
    --tw-outline-style: none;
    outline-style: none;
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  .has-data-\[slot\=card-action\]\:grid-cols-\[1fr_auto\]:has([data-slot="card-action"]) {
    grid-template-columns: 1fr auto;
  }

  .has-\[\>svg\]\:px-2\.5:has( > svg) {
    padding-inline: calc(var(--spacing) * 2.5);
  }

  .has-\[\>svg\]\:px-3:has( > svg) {
    padding-inline: calc(var(--spacing) * 3);
  }

  .has-\[\>svg\]\:px-4:has( > svg) {
    padding-inline: calc(var(--spacing) * 4);
  }

  .aria-invalid\:border-destructive[aria-invalid="true"] {
    border-color: var(--destructive);
  }

  .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .aria-invalid\:ring-destructive\/20[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .data-\[disabled\]\:pointer-events-none[data-disabled] {
    pointer-events: none;
  }

  .data-\[disabled\]\:opacity-50[data-disabled] {
    opacity: .5;
  }

  .data-\[inset\]\:pl-8[data-inset] {
    padding-left: calc(var(--spacing) * 8);
  }

  .data-\[orientation\=horizontal\]\:h-px[data-orientation="horizontal"] {
    height: 1px;
  }

  .data-\[orientation\=horizontal\]\:w-full[data-orientation="horizontal"] {
    width: 100%;
  }

  .data-\[orientation\=vertical\]\:h-full[data-orientation="vertical"] {
    height: 100%;
  }

  .data-\[orientation\=vertical\]\:w-px[data-orientation="vertical"] {
    width: 1px;
  }

  .data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
    --tw-enter-translate-y: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
    --tw-enter-translate-x: calc(2 * var(--spacing));
  }

  .data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
    --tw-enter-translate-x: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
    --tw-enter-translate-y: calc(2 * var(--spacing));
  }

  .data-\[state\=closed\]\:animate-out[data-state="closed"] {
    animation: exit var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
    --tw-exit-opacity: 0;
  }

  .data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
    --tw-exit-scale: .95;
  }

  .data-\[state\=open\]\:animate-in[data-state="open"] {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=open\]\:bg-accent[data-state="open"] {
    background-color: var(--accent);
  }

  .data-\[state\=open\]\:text-accent-foreground[data-state="open"] {
    color: var(--accent-foreground);
  }

  .data-\[state\=open\]\:fade-in-0[data-state="open"] {
    --tw-enter-opacity: 0;
  }

  .data-\[state\=open\]\:zoom-in-95[data-state="open"] {
    --tw-enter-scale: .95;
  }

  .data-\[variant\=destructive\]\:text-destructive[data-variant="destructive"] {
    color: var(--destructive);
  }

  .data-\[variant\=destructive\]\:focus\:bg-destructive\/10[data-variant="destructive"]:focus {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .data-\[variant\=destructive\]\:focus\:bg-destructive\/10[data-variant="destructive"]:focus {
      background-color: color-mix(in oklab, var(--destructive) 10%, transparent);
    }
  }

  .data-\[variant\=destructive\]\:focus\:text-destructive[data-variant="destructive"]:focus {
    color: var(--destructive);
  }

  @media (width >= 40rem) {
    .sm\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 48rem) {
    :where(.md\:space-y-0 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 0) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 0) * calc(1 - var(--tw-space-y-reverse)));
    }
  }

  @media (width >= 48rem) {
    .md\:text-right {
      text-align: right;
    }
  }

  @media (width >= 64rem) {
    .lg\:flex {
      display: flex;
    }
  }

  @media (width >= 64rem) {
    .lg\:hidden {
      display: none;
    }
  }

  @media (width >= 64rem) {
    .lg\:h-20 {
      height: calc(var(--spacing) * 20);
    }
  }

  @media (width >= 64rem) {
    .lg\:w-20 {
      width: calc(var(--spacing) * 20);
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:py-32 {
      padding-block: calc(var(--spacing) * 32);
    }
  }

  @media (width >= 64rem) {
    .lg\:text-4xl {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-6xl {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-xl {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }

  @media (width >= 80rem) {
    .xl\:block {
      display: block;
    }
  }

  @media (width >= 80rem) {
    .xl\:hidden {
      display: none;
    }
  }

  @media (width >= 96rem) {
    .\32 xl\:block {
      display: block;
    }
  }

  @media (width >= 96rem) {
    .\32 xl\:flex {
      display: flex;
    }
  }

  @media (width >= 96rem) {
    .\32 xl\:hidden {
      display: none;
    }
  }

  .dark\:border-input:is(.dark *) {
    border-color: var(--input);
  }

  .dark\:bg-destructive\/60:is(.dark *) {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-destructive\/60:is(.dark *) {
      background-color: color-mix(in oklab, var(--destructive) 60%, transparent);
    }
  }

  .dark\:bg-input\/30:is(.dark *) {
    background-color: var(--input);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-input\/30:is(.dark *) {
      background-color: color-mix(in oklab, var(--input) 30%, transparent);
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-accent\/50:is(.dark *):hover {
      background-color: var(--accent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-accent\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--accent) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .dark\:hover\:bg-input\/50:is(.dark *):hover {
      background-color: var(--input);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-input\/50:is(.dark *):hover {
        background-color: color-mix(in oklab, var(--input) 50%, transparent);
      }
    }
  }

  .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:focus-visible\:ring-destructive\/40:is(.dark *):focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
    --tw-ring-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:aria-invalid\:ring-destructive\/40:is(.dark *)[aria-invalid="true"] {
      --tw-ring-color: color-mix(in oklab, var(--destructive) 40%, transparent);
    }
  }

  .dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20:is(.dark *)[data-variant="destructive"]:focus {
    background-color: var(--destructive);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-\[variant\=destructive\]\:focus\:bg-destructive\/20:is(.dark *)[data-variant="destructive"]:focus {
      background-color: color-mix(in oklab, var(--destructive) 20%, transparent);
    }
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&_svg\:not\(\[class\*\=\'text-\'\]\)\]\:text-muted-foreground svg:not([class*="text-"]) {
    color: var(--muted-foreground);
  }

  .\[\.border-b\]\:pb-6.border-b {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .\[\.border-t\]\:pt-6.border-t {
    padding-top: calc(var(--spacing) * 6);
  }

  :is(.data-\[variant\=destructive\]\:\*\:\[svg\]\:\!text-destructive[data-variant="destructive"] > *):is(svg) {
    color: var(--destructive) !important;
  }

  .\[\&\:last-child\]\:pb-6:last-child {
    padding-bottom: calc(var(--spacing) * 6);
  }
}

:root, .dark {
  --background: var(--color-bg-darker);
  --foreground: var(--color-white);
  --card: var(--color-bg-darkerst);
  --card-foreground: var(--color-white);
  --popover: var(--color-bg-darkerst);
  --popover-foreground: var(--color-white);
  --primary: var(--color-true-lavender);
  --primary-foreground: var(--color-white);
  --secondary: var(--color-horizon);
  --secondary-foreground: var(--color-white);
  --accent: var(--color-mint);
  --accent-foreground: var(--color-white);
  --muted: var(--color-bg-darkerst);
  --muted-foreground: var(--color-white);
  --destructive: var(--color-error);
  --destructive-foreground: var(--color-white);
  --border: var(--color-horizon);
  --input: var(--color-bg-darkerst);
  --input-background: var(--color-bg-darkerst);
  --ring: var(--color-true-lavender);
  --switch-background: var(--color-horizon);
  --chart-1: var(--color-true-lavender);
  --chart-2: var(--color-horizon);
  --chart-3: var(--color-mint);
  --chart-4: var(--color-bg-darker);
  --chart-5: var(--color-bg-darkerst);
  --sidebar: var(--color-bg-darker);
  --sidebar-foreground: var(--color-white);
  --sidebar-primary: var(--color-true-lavender);
  --sidebar-primary-foreground: var(--color-white);
  --sidebar-accent: var(--color-bg-darkerst);
  --sidebar-accent-foreground: var(--color-white);
  --sidebar-border: var(--color-horizon);
  --sidebar-ring: var(--color-true-lavender);
  --radius: var(--radius-lg);
}

.on-dark {
  color: var(--color-white);
}

.on-light {
  color: var(--color-bg-darker);
}

.on-bg-darker {
  background-color: var(--color-bg-darker);
  color: var(--color-white);
}

.on-bg-darkerst {
  background-color: var(--color-bg-darkerst);
  color: var(--color-white);
}

.on-true-lavender {
  background-color: var(--color-true-lavender);
  color: var(--color-white);
}

.on-horizon {
  background-color: var(--color-horizon);
  color: var(--color-white);
}

.on-mint {
  background-color: var(--color-mint);
  color: var(--color-white);
}

.nav-header {
  background-color: var(--card);
  border-bottom-style: solid;
  border-bottom-width: 1px;
  border-bottom-color: var(--border);
  z-index: var(--z-sticky);
  position: sticky;
  top: 0;
}

.nav-header-container {
  max-width: 1280px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}

.nav-header-content {
  align-items: center;
  height: 4rem;
  display: flex;
}

.nav-logo-link {
  transition: opacity var(--transition-base);
  align-items: center;
  gap: .75rem;
  margin-right: 2rem;
  display: flex;
}

.nav-logo-link:hover {
  opacity: .8;
}

.nav-logo-image {
  width: 2.5rem;
  height: 2.5rem;
}

.nav-logo-text {
  font-size: var(--text-xl);
  white-space: nowrap;
}

.nav-desktop {
  flex: 1;
  align-items: center;
  gap: 1.5rem;
  display: none;
}

@media (width >= 1024px) {
  .nav-desktop {
    display: flex;
  }
}

.nav-dropdown-wrapper {
  position: relative;
}

.nav-dropdown-trigger {
  color: var(--foreground);
  white-space: nowrap;
  transition: color var(--transition-base);
  align-items: center;
  gap: .25rem;
  display: flex;
}

.nav-dropdown-trigger:hover {
  color: var(--primary);
}

.nav-chevron {
  width: 1rem;
  height: 1rem;
}

.nav-dropdown-content {
  background-color: var(--card);
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  width: 16rem;
  box-shadow: var(--shadow-lg);
  z-index: var(--z-dropdown);
  margin-top: .25rem;
  padding-top: .5rem;
  padding-bottom: .5rem;
  position: absolute;
  top: 100%;
  left: 0;
}

.nav-dropdown-content-wide {
  background-color: var(--card);
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  width: 16rem;
  box-shadow: var(--shadow-lg);
  z-index: var(--z-dropdown);
  max-height: 24rem;
  margin-top: .25rem;
  padding-top: .5rem;
  padding-bottom: .5rem;
  position: absolute;
  top: 100%;
  left: 0;
  overflow-y: auto;
}

.nav-dropdown-content-medium {
  background-color: var(--card);
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  width: 14rem;
  box-shadow: var(--shadow-lg);
  z-index: var(--z-dropdown);
  margin-top: .25rem;
  padding-top: .5rem;
  padding-bottom: .5rem;
  position: absolute;
  top: 100%;
  left: 0;
}

.nav-dropdown-content-small {
  background-color: var(--card);
  border: 1px solid var(--border);
  border-radius: var(--radius-md);
  width: 12rem;
  box-shadow: var(--shadow-lg);
  z-index: var(--z-dropdown);
  margin-top: .25rem;
  padding-top: .5rem;
  padding-bottom: .5rem;
  position: absolute;
  top: 100%;
  left: 0;
}

.nav-dropdown-item {
  font-size: var(--text-sm);
  color: var(--foreground);
  transition: background-color var(--transition-base), color var(--transition-base);
  padding: .5rem 1rem;
  display: block;
}

.nav-dropdown-item:hover {
  background-color: var(--muted);
  color: var(--primary);
}

.nav-item-hidden-xl {
  display: none;
}

@media (width >= 1280px) {
  .nav-item-hidden-xl {
    display: block;
  }
}

.nav-item-hidden-2xl {
  display: none;
}

@media (width >= 1536px) {
  .nav-item-hidden-2xl {
    display: block;
  }
}

.nav-item-visible-until-2xl {
  display: block;
}

@media (width >= 1536px) {
  .nav-item-visible-until-2xl {
    display: none;
  }
}

.nav-more-trigger {
  white-space: nowrap;
  border-radius: var(--radius-md);
  font-size: var(--text-sm);
  font-weight: var(--font-weight-medium);
  transition: colors var(--transition-base);
  justify-content: center;
  align-items: center;
  height: 2.25rem;
  padding-left: .5rem;
  padding-right: .5rem;
  display: inline-flex;
}

.nav-more-trigger:hover {
  background-color: var(--accent);
  color: var(--accent-foreground);
}

.nav-more-trigger:focus-visible {
  box-shadow: 0 0 0 2px var(--ring);
  outline: none;
}

.nav-more-trigger:disabled {
  pointer-events: none;
  opacity: .5;
}

.nav-more-icon {
  width: 1rem;
  height: 1rem;
}

.nav-more-content-visible-until-xl {
  display: block;
}

@media (width >= 1280px) {
  .nav-more-content-visible-until-xl {
    display: none;
  }
}

.nav-actions {
  align-items: center;
  gap: .75rem;
  margin-left: auto;
  display: none;
}

@media (width >= 1536px) {
  .nav-actions {
    display: flex;
  }
}

.nav-mobile-toggle {
  color: var(--foreground);
  cursor: pointer;
  background: none;
  border: none;
  margin-left: auto;
  padding: .5rem;
  display: block;
}

@media (width >= 1024px) {
  .nav-mobile-toggle {
    display: none;
  }
}

.nav-mobile-icon {
  width: 1.5rem;
  height: 1.5rem;
}

.nav-mobile-menu {
  border-top: 1px solid var(--border);
  background-color: var(--card);
  display: block;
}

@media (width >= 1024px) {
  .nav-mobile-menu {
    display: none;
  }
}

.nav-mobile-menu-inner {
  max-height: 70vh;
  padding-top: 1rem;
  padding-bottom: 1rem;
  overflow-y: auto;
}

.nav-mobile-menu-spacer {
  flex-direction: column;
  gap: .5rem;
  display: flex;
}

.nav-mobile-section {
  padding: .5rem 1rem;
}

.nav-mobile-section-title {
  color: var(--foreground);
  transition: color var(--transition-base);
  margin-bottom: .5rem;
  display: block;
}

.nav-mobile-section-title:hover {
  color: var(--primary);
}

.nav-mobile-subsection {
  flex-direction: column;
  gap: .25rem;
  margin-left: 1rem;
  display: flex;
}

.nav-mobile-subsection-item {
  font-size: var(--text-sm);
  color: var(--muted-foreground);
  transition: color var(--transition-base);
  padding-top: .25rem;
  padding-bottom: .25rem;
  display: block;
}

.nav-mobile-subsection-item:hover {
  color: var(--primary);
}

.nav-mobile-link {
  color: var(--foreground);
  transition: color var(--transition-base);
  padding: .5rem 1rem;
  display: block;
}

.nav-mobile-link:hover {
  color: var(--primary);
}

.nav-mobile-actions {
  border-top: 1px solid var(--border);
  flex-direction: column;
  gap: .5rem;
  margin-top: 1rem;
  padding-top: 1rem;
  padding-left: 1rem;
  padding-right: 1rem;
  display: flex;
}

.footer-main {
  background-color: var(--card);
  border-top: 1px solid var(--border);
}

.footer-container {
  max-width: 1280px;
  margin-left: auto;
  margin-right: auto;
  padding: 3rem 1rem;
}

.footer-grid {
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 2rem;
  display: grid;
}

@media (width >= 768px) {
  .footer-grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

.footer-logo-wrapper {
  align-items: center;
  gap: .75rem;
  margin-bottom: 1rem;
  display: flex;
}

.footer-logo-image {
  width: 2rem;
  height: 2rem;
}

.footer-logo-text {
  font-size: var(--text-xl);
}

.footer-tagline, .footer-description {
  color: var(--muted-foreground);
  font-size: var(--text-sm);
  margin-bottom: 1.5rem;
}

.footer-contact-list {
  font-size: var(--text-sm);
  flex-direction: column;
  gap: .5rem;
  margin-bottom: 1.5rem;
  display: flex;
}

.footer-contact-item {
  color: var(--muted-foreground);
  align-items: center;
  gap: .5rem;
  display: flex;
}

.footer-contact-icon {
  width: 1rem;
  height: 1rem;
}

.footer-contact-link {
  transition: color var(--transition-base);
}

.footer-contact-link:hover {
  color: var(--primary);
}

.footer-social-title {
  font-size: var(--text-sm);
  margin-bottom: .75rem;
}

.footer-social-links {
  gap: .75rem;
  display: flex;
}

.footer-social-link {
  color: var(--muted-foreground);
  transition: color var(--transition-base);
}

.footer-social-link:hover {
  color: var(--primary);
}

.footer-social-icon {
  width: 1rem;
  height: 1rem;
}

.footer-section-title {
  margin-bottom: 1rem;
}

.footer-link-list {
  flex-direction: column;
  gap: .75rem;
  margin-bottom: 1.5rem;
  display: flex;
}

.footer-button-group, .footer-legal-list {
  flex-direction: column;
  gap: .5rem;
  display: flex;
}

.footer-legal-link {
  font-size: var(--text-sm);
  color: var(--muted-foreground);
  transition: color var(--transition-base);
}

.footer-legal-link:hover {
  color: var(--primary);
}

.footer-separator {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.footer-bottom {
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  gap: 1rem;
  display: flex;
}

@media (width >= 768px) {
  .footer-bottom {
    flex-direction: row;
    gap: 0;
  }
}

.footer-copyright {
  font-size: var(--text-sm);
  color: var(--muted-foreground);
}

.footer-motto {
  font-size: var(--text-sm);
  color: var(--muted-foreground);
  text-align: center;
}

@media (width >= 768px) {
  .footer-motto {
    text-align: right;
  }
}

.hero-section {
  background: linear-gradient(to bottom, var(--background), var(--card));
  padding-top: 5rem;
  padding-bottom: 5rem;
  position: relative;
}

@media (width >= 1024px) {
  .hero-section {
    padding-top: 8rem;
    padding-bottom: 8rem;
  }
}

.hero-container {
  max-width: 1280px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}

.hero-content {
  text-align: center;
  max-width: 56rem;
  margin-left: auto;
  margin-right: auto;
}

.hero-logo-title-wrapper {
  justify-content: center;
  align-items: center;
  gap: 1rem;
  margin-bottom: 2rem;
  display: flex;
}

.hero-logo-image {
  width: 4rem;
  height: 4rem;
}

@media (width >= 1024px) {
  .hero-logo-image {
    width: 5rem;
    height: 5rem;
  }
}

.hero-title {
  background: linear-gradient(to right, var(--primary), var(--secondary), var(--accent));
  -webkit-text-fill-color: transparent;
  color: #0000;
  background-clip: text;
  margin-bottom: .5rem;
  font-size: 2.25rem;
}

@media (width >= 1024px) {
  .hero-title {
    font-size: 3.75rem;
  }
}

.hero-subtitle {
  color: var(--muted-foreground);
  font-size: 1.125rem;
}

@media (width >= 1024px) {
  .hero-subtitle {
    font-size: 1.25rem;
  }
}

.hero-slogan {
  max-width: 48rem;
  margin-bottom: 1.5rem;
  margin-left: auto;
  margin-right: auto;
  font-size: 1.5rem;
}

@media (width >= 1024px) {
  .hero-slogan {
    font-size: 2.25rem;
  }
}

.hero-description {
  color: var(--muted-foreground);
  max-width: 42rem;
  margin-bottom: 2rem;
  margin-left: auto;
  margin-right: auto;
  font-size: 1.125rem;
}

@media (width >= 1024px) {
  .hero-description {
    font-size: 1.25rem;
  }
}

.hero-cta-container {
  flex-direction: column;
  justify-content: center;
  gap: 1rem;
  margin-bottom: 3rem;
  display: flex;
}

@media (width >= 640px) {
  .hero-cta-container {
    flex-direction: row;
  }
}

.hero-cta-link-content {
  align-items: center;
  gap: .5rem;
  display: flex;
}

.hero-cta-icon {
  width: 1.25rem;
  height: 1.25rem;
}

.hero-features-grid {
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 2rem;
  max-width: 48rem;
  margin-left: auto;
  margin-right: auto;
  display: grid;
}

@media (width >= 768px) {
  .hero-features-grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

.hero-feature-item {
  text-align: center;
}

.hero-feature-icon-wrapper {
  border-radius: var(--radius-full);
  background-color: #7e65b933;
  justify-content: center;
  align-items: center;
  width: 4rem;
  height: 4rem;
  margin-bottom: 1rem;
  margin-left: auto;
  margin-right: auto;
  padding: 1rem;
  display: flex;
}

.hero-feature-icon-wrapper-secondary {
  border-radius: var(--radius-full);
  background-color: #5a8fa833;
  justify-content: center;
  align-items: center;
  width: 4rem;
  height: 4rem;
  margin-bottom: 1rem;
  margin-left: auto;
  margin-right: auto;
  padding: 1rem;
  display: flex;
}

.hero-feature-icon-wrapper-accent {
  border-radius: var(--radius-full);
  background-color: #3eb69433;
  justify-content: center;
  align-items: center;
  width: 4rem;
  height: 4rem;
  margin-bottom: 1rem;
  margin-left: auto;
  margin-right: auto;
  padding: 1rem;
  display: flex;
}

.hero-feature-icon {
  width: 2rem;
  height: 2rem;
  color: var(--primary);
}

.hero-feature-icon-secondary {
  width: 2rem;
  height: 2rem;
  color: var(--secondary);
}

.hero-feature-icon-accent {
  width: 2rem;
  height: 2rem;
  color: var(--accent);
}

.hero-feature-title {
  margin-bottom: .5rem;
}

.hero-feature-description {
  font-size: var(--text-sm);
  color: var(--muted-foreground);
}

.akronym-section {
  background-color: var(--card);
  padding-top: 5rem;
  padding-bottom: 5rem;
}

.akronym-container {
  max-width: 1280px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}

.akronym-content {
  max-width: 56rem;
  margin-left: auto;
  margin-right: auto;
}

.akronym-header {
  text-align: center;
  margin-bottom: 3rem;
}

.akronym-title {
  margin-bottom: 1.5rem;
  font-size: 1.875rem;
}

@media (width >= 1024px) {
  .akronym-title {
    font-size: 2.25rem;
  }
}

.akronym-description {
  color: var(--muted-foreground);
  max-width: 48rem;
  margin-left: auto;
  margin-right: auto;
  font-size: 1.125rem;
}

.akronym-grid {
  grid-template-columns: repeat(1, minmax(0, 1fr));
  align-items: center;
  gap: 2rem;
  display: grid;
}

@media (width >= 1024px) {
  .akronym-grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

.akronym-pillars-title {
  margin-bottom: 1rem;
  font-size: 1.25rem;
}

.akronym-pillars-list {
  flex-direction: column;
  gap: .75rem;
  display: flex;
}

.akronym-pillar-item {
  align-items: flex-start;
  gap: .75rem;
  display: flex;
}

.akronym-pillar-bullet {
  background-color: var(--primary);
  border-radius: var(--radius-full);
  margin-top: .25rem;
  padding: .25rem;
}

.akronym-pillar-bullet-secondary {
  background-color: var(--secondary);
  border-radius: var(--radius-full);
  margin-top: .25rem;
  padding: .25rem;
}

.akronym-pillar-bullet-accent {
  background-color: var(--accent);
  border-radius: var(--radius-full);
  margin-top: .25rem;
  padding: .25rem;
}

.akronym-pillar-bullet-inner {
  background-color: var(--color-white);
  border-radius: var(--radius-full);
  width: .5rem;
  height: .5rem;
}

.akronym-card-buttons {
  flex-direction: column;
  gap: .5rem;
  display: flex;
}

.akronym-card-button-content {
  align-items: center;
  gap: .5rem;
  display: flex;
}

.akronym-card-button-icon {
  width: 1rem;
  height: 1rem;
}

.akronym-card-text {
  font-size: var(--text-sm);
  margin-bottom: 1rem;
}

.aktuelles-section {
  background-color: var(--card);
  padding-top: 5rem;
  padding-bottom: 5rem;
}

.aktuelles-container {
  max-width: 1280px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}

.aktuelles-header {
  text-align: center;
  margin-bottom: 3rem;
}

.aktuelles-title {
  margin-bottom: 1.5rem;
  font-size: 1.875rem;
}

@media (width >= 1024px) {
  .aktuelles-title {
    font-size: 2.25rem;
  }
}

.aktuelles-description {
  color: var(--muted-foreground);
  font-size: 1.125rem;
}

.aktuelles-grid {
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 1.5rem;
  display: grid;
}

@media (width >= 768px) {
  .aktuelles-grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (width >= 1024px) {
  .aktuelles-grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

.aktuelles-card {
  transition: box-shadow var(--transition-base);
}

.aktuelles-card:hover {
  box-shadow: var(--shadow-lg);
}

.aktuelles-date-wrapper {
  font-size: var(--text-sm);
  color: var(--muted-foreground);
  align-items: center;
  gap: .5rem;
  margin-bottom: .5rem;
  display: flex;
}

.aktuelles-date-icon {
  width: 1rem;
  height: 1rem;
}

.aktuelles-card-title {
  font-size: 1.125rem;
}

.aktuelles-card-link-content {
  align-items: center;
  gap: .5rem;
  display: flex;
}

.aktuelles-card-link-icon {
  width: 1rem;
  height: 1rem;
}

.aktuelles-cta {
  text-align: center;
  margin-top: 2rem;
}

.aktuelles-cta-link-content {
  align-items: center;
  gap: .5rem;
  display: flex;
}

.aktuelles-cta-icon {
  width: 1.25rem;
  height: 1.25rem;
}

.mitmachen-section {
  padding-top: 5rem;
  padding-bottom: 5rem;
}

.mitmachen-container {
  max-width: 1280px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}

.mitmachen-content {
  text-align: center;
  max-width: 56rem;
  margin-left: auto;
  margin-right: auto;
}

.mitmachen-title {
  margin-bottom: 1.5rem;
  font-size: 1.875rem;
}

@media (width >= 1024px) {
  .mitmachen-title {
    font-size: 2.25rem;
  }
}

.mitmachen-description {
  color: var(--muted-foreground);
  max-width: 42rem;
  margin-bottom: 2rem;
  margin-left: auto;
  margin-right: auto;
  font-size: 1.125rem;
}

.mitmachen-grid {
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 1.5rem;
  margin-bottom: 2rem;
  display: grid;
}

@media (width >= 768px) {
  .mitmachen-grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

.mitmachen-card {
  text-align: center;
}

.mitmachen-card-icon-users {
  width: 2rem;
  height: 2rem;
  color: var(--primary);
  margin-bottom: .5rem;
  margin-left: auto;
  margin-right: auto;
}

.mitmachen-card-icon-lightbulb {
  width: 2rem;
  height: 2rem;
  color: var(--secondary);
  margin-bottom: .5rem;
  margin-left: auto;
  margin-right: auto;
}

.mitmachen-card-icon-heart {
  width: 2rem;
  height: 2rem;
  color: var(--accent);
  margin-bottom: .5rem;
  margin-left: auto;
  margin-right: auto;
}

.mitmachen-card-description {
  font-size: var(--text-sm);
  color: var(--muted-foreground);
  margin-bottom: 1rem;
}

.programm-section {
  padding-top: 5rem;
  padding-bottom: 5rem;
}

.programm-container {
  max-width: 1280px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}

.programm-header {
  text-align: center;
  margin-bottom: 3rem;
}

.programm-title {
  margin-bottom: 1.5rem;
  font-size: 1.875rem;
}

@media (width >= 1024px) {
  .programm-title {
    font-size: 2.25rem;
  }
}

.programm-description {
  color: var(--muted-foreground);
  max-width: 48rem;
  margin-left: auto;
  margin-right: auto;
  font-size: 1.125rem;
}

.programm-grid {
  grid-template-columns: repeat(1, minmax(0, 1fr));
  gap: 1.5rem;
  display: grid;
}

@media (width >= 768px) {
  .programm-grid {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}

@media (width >= 1024px) {
  .programm-grid {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }
}

.programm-card {
  cursor: pointer;
  transition: box-shadow var(--transition-base);
}

.programm-card:hover {
  box-shadow: var(--shadow-lg);
}

.programm-icon-wrapper {
  border-radius: var(--radius-full);
  background-color: #7e65b933;
  justify-content: center;
  align-items: center;
  width: 3rem;
  height: 3rem;
  margin-bottom: 1rem;
  padding: .75rem;
  display: flex;
}

.programm-icon-content {
  color: var(--primary);
}

.programm-icon {
  width: 1.5rem;
  height: 1.5rem;
}

.programm-card-title {
  font-size: 1.125rem;
}

.programm-card-description {
  font-size: var(--text-sm);
  color: var(--muted-foreground);
  margin-bottom: 1rem;
}

.programm-card-link-content {
  align-items: center;
  gap: .5rem;
  display: flex;
}

.programm-card-link-icon {
  width: 1rem;
  height: 1rem;
}

.programm-cta {
  text-align: center;
  margin-top: 2rem;
}

.programm-cta-link-content {
  align-items: center;
  gap: .5rem;
  display: flex;
}

.programm-cta-icon {
  width: 1.25rem;
  height: 1.25rem;
}

.placeholder-wrapper {
  background-color: var(--background);
  min-height: 100vh;
  color: var(--foreground);
  justify-content: center;
  align-items: center;
  display: flex;
}

.placeholder-content {
  text-align: center;
  max-width: 28rem;
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}

.placeholder-icon-wrapper {
  border-radius: var(--radius-full);
  background-color: #7e65b933;
  justify-content: center;
  align-items: center;
  width: 6rem;
  height: 6rem;
  margin-bottom: 1.5rem;
  margin-left: auto;
  margin-right: auto;
  padding: 1.5rem;
  display: flex;
}

.placeholder-icon {
  width: 3rem;
  height: 3rem;
  color: var(--primary);
}

.placeholder-title {
  margin-bottom: 1rem;
  font-size: 1.875rem;
}

.placeholder-description {
  color: var(--muted-foreground);
  margin-bottom: 1.5rem;
  font-size: 1.125rem;
}

.placeholder-button-content {
  align-items: center;
  gap: .5rem;
  display: flex;
}

.placeholder-button-icon {
  width: 1rem;
  height: 1rem;
}

:root {
  --color-true-lavender: #7e65b9;
  --color-horizon: #5a8fa8;
  --color-mint: #3eb694;
  --color-bg-darker: #322a45;
  --color-bg-darkerst: #423a51;
  --color-white: #fff;
  --color-error: #d4183d;
  --font-size-base: 16px;
  --text-xs: .75rem;
  --text-sm: .875rem;
  --text-base: 1rem;
  --text-lg: 1.125rem;
  --text-xl: 1.25rem;
  --text-2xl: 1.5rem;
  --text-3xl: 1.875rem;
  --text-4xl: 2.25rem;
  --text-5xl: 3rem;
  --text-6xl: 3.75rem;
  --font-weight-normal: 400;
  --font-weight-medium: 500;
  --font-weight-semibold: 600;
  --font-weight-bold: 700;
  --spacing-xs: .25rem;
  --spacing-sm: .5rem;
  --spacing-md: 1rem;
  --spacing-lg: 1.5rem;
  --spacing-xl: 2rem;
  --spacing-2xl: 3rem;
  --spacing-3xl: 4rem;
  --radius-sm: .375rem;
  --radius-md: .5rem;
  --radius-lg: .625rem;
  --radius-xl: .75rem;
  --radius-2xl: 1rem;
  --radius-full: 9999px;
  --transition-fast: .15s ease;
  --transition-base: .2s ease;
  --transition-slow: .3s ease;
  --shadow-sm: 0 1px 2px 0 #0000000d;
  --shadow-md: 0 4px 6px -1px #0000001a;
  --shadow-lg: 0 10px 15px -3px #0000001a;
  --shadow-xl: 0 20px 25px -5px #0000001a;
  --z-base: 1;
  --z-dropdown: 10;
  --z-sticky: 20;
  --z-overlay: 30;
  --z-modal: 40;
  --z-tooltip: 50;
}

html {
  font-size: var(--font-size-base);
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-gradient-position {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}

@property --tw-gradient-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false
}

@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}

@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-leading {
  syntax: "*";
  inherits: false
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-tracking {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}
